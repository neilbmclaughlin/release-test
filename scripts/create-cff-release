#!/bin/bash

set -e

# Check if correct number of arguments are provided
if [ $# -lt 3 ]; then
  echo "Usage: create-cff-release { major|minor|patch } {proposed release date (dd/mm/yyyy)} {jira release id ) [start commit]"
  echo "example: create-cff-release minor 01/04/2024 16838"
  echo "note 1 - the jira id is from the URL in the list here https://eaflood.atlassian.net/projects/FSR?selectedItem=com.atlassian.jira.jira-projects-plugin%3Arelease-page"
  echo "note 2 - use a start commit to create the release branch from a commit other than the head of the development branch"
  exit 1
fi

SEMANTIC_VERSION_INCREMENT=$1
FORMATTED_RELEASE_DATE=$(date -j -f "%d/%m/%Y" "$2" +"%A %d %B %Y")
JIRA_RELEASE_ID=$3
COMMIT=$4

git switch master
git pull

git switch development
git pull

if [ -n "$COMMIT" ] && ! git log development | grep -q "$COMMIT" ; then
  echo "The development branch does not contain the commit $COMMIT"
  exit 1
fi

REF="${COMMIT:-development}"

if ! git log --oneline master..$REF | grep -q .; then
  echo "Quitting as there are no changes between $REF and master"
  exit 1
fi

npm version --no-git-tag-version $SEMANTIC_VERSION_INCREMENT

VERSION=$(jq -r '.version' package.json)
RELEASE_BRANCH="release/$VERSION"
RELEASE_NOTES_FILE="./release-docs/CFF-${VERSION}.md"

git --no-pager log --oneline -10 development

echo
echo "Creating release $VERSION with branch $RELEASE_BRANCH from $REF and proposed release date of $FORMATTED_RELEASE_DATE"
echo "Hit return to continue or  ctrl-c to quit"

read

git switch -c $RELEASE_BRANCH $COMMIT

TEMP_FILE=$(mktemp)
git show ${RELEASE_BRANCH}...master --oneline --no-patch --pretty=%s -10 | grep -e '^FSR-' > $TEMP_FILE


npm run create-release-notes -- --file $TEMP_FILE --date "$FORMATTED_RELEASE_DATE" --release "$VERSION" --output $RELEASE_NOTES_FILE --id $JIRA_RELEASE_ID --template 'release-docs/template.md'

"${EDITOR:-vi}" "$RELEASE_NOTES_FILE"

echo "Waiting for user to save and close the file..."
while [ ! -s "$TEMP_FILE" ]; do
    sleep 1
done

git add "$RELEASE_NOTES_FILE" package.json package-lock.json

git commit -m "Add release notes and bump version number to ${VERSION}" --no-edit

git push -u origin "$RELEASE_BRANCH"
gh pr create --base master --fill --title "Release $VERSION" --body "$JIRA_TICKETS"
gh release create "$VERSION" --draft --title "Release $VERSION" --notes "Refer to $RELEASE_NOTES_FILE for release notes"

git switch development


echo "Release $VERSION created with branch $RELEASE_BRANCH and proposed release date of $FORMATTED_RELEASE_DATE"
